<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.connect.data.dao.IUserDao">
    <resultMap id="userDtoResultMap" type="com.connect.data.dto.UserDto">
        <id property="userId" column="userId"/>
        <result property="uuid" column="uuid"/>
        <result property="username" column="username"/>
        <result property="description" column="description"/>
        <result property="role" column="role"/>
        <result property="status" column="status"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="profileImage" column="profileImage"/>
        <result property="views" column="views"/>
        <result property="version" column="version"/>
        <result property="followers" column="followers"/>
        <result property="followings" column="followings"/>
    </resultMap>

    <resultMap id="userResultMap" type="com.connect.data.entity.User">
        <id property="userId" column="userId"/>
        <result property="uuid" column="uuid"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="description" column="description"/>
        <result property="role" column="role"/>
        <result property="status" column="status"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="profileImage" column="profileImage"/>
        <result property="views" column="views"/>
        <result property="version" column="version"/>
        <result property="followers" column="followers"/>
        <result property="followings" column="followings"/>
    </resultMap>

    <select id="signIn" resultMap="userResultMap">
        SELECT userId, uuid, username, status, role, password, description, email, phone, profileImage, views,
        followers, followings, version

        FROM user
        WHERE username = #{username,jdbcType=VARCHAR}
    </select>

    <insert id="signUp" parameterType="com.connect.data.entity.User" useGeneratedKeys="true"
            keyProperty="userId" keyColumn="userId">
        INSERT INTO user(uuid, username, password, status, description, email, phone, profileImage)
        VALUES (
        #{uuid, jdbcType=VARCHAR},
        #{username, jdbcType=VARCHAR},
        #{password,jdbcType=VARCHAR},
        #{status,jdbcType=TINYINT},
        #{description, jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR},
        #{phone,jdbcType=VARCHAR},
        #{profileImage, jdbcType=VARCHAR}
        )
    </insert>

    <update id="editUser" parameterType="com.connect.data.entity.User">
        UPDATE user
        <trim prefix="set" suffixOverrides=",">
            <if test="password != null and password != ''">
                password = #{password, jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status, jdbcType=TINYINT},
            </if>
            <if test="role != null">
                role = #{role, jdbcType=TINYINT},
            </if>
            <if test="email != null and email != ''">
                email = #{email, jdbcType=VARCHAR},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone, jdbcType=VARCHAR},
            </if>
        </trim>
        WHERE userId = #{userId, jdbcType=BIGINT}
    </update>

    <update id="editUserProfile" parameterType="com.connect.data.entity.Profile">
        UPDATE user
        <trim prefix="set" suffixOverrides=",">
            <if test="username != null and username != ''">
                username = #{username, jdbcType=VARCHAR},
            </if>
            <if test="description != null and description != ''">
                description = #{description, jdbcType=VARCHAR},
            </if>
            <if test="profileImage != null and profileImage != ''">
                profileImage = #{profileImage, jdbcType=VARCHAR},
            </if>
        </trim>
        WHERE userId = #{userId, jdbcType=BIGINT}
    </update>

    <delete id="deleteUser">
        UPDATE user
        SET `status` = 3,
        WHERE userId = #{userId, jdbcType=BIGINT}
    </delete>

    <select id="queryUser" resultMap="userDtoResultMap">
        SELECT userId, uuid, username, status, role, description, email, phone, profileImage, views, followers, followings,
        version
        FROM user
        WHERE (username LIKE CONCAT('%', #{keyword}, '%') OR description LIKE CONCAT('%', #{keyword}, '%'))
        AND (
        status = 0
        OR (status = 1
        AND userId IN (SELECT followingId FROM follow WHERE followerId = #{requesterId} AND status = 2 ) )
        OR (status != 3 AND username = #{requesterId} )
        )
    </select>

    <select id="queryUserByUsername" resultMap="userDtoResultMap">
        SELECT userId, uuid, username, status, role, description, email, phone, profileImage, views, followers, followings,
        version

        FROM user
        WHERE username = #{username}
        AND (
        status = 0
        OR (status = 1
        AND userId IN (SELECT followingId FROM follow WHERE followerId = #{requesterId} AND status = 2 ) )
        OR (status != 3 AND userId = #{requesterId} )
        )
    </select>

    <select id="internalQueryUserByUsername" resultMap="userResultMap">
        SELECT userId, uuid, username, status, role, description, email, phone, profileImage, views, followers, followings,
        version

        FROM user
        WHERE username = #{username}
        AND status != 3
    </select>

    <select id="internalQueryUserByUserId" resultMap="userResultMap">
        SELECT userId, uuid, username, status, role, description, email, phone, profileImage, views, followers, followings,
        version

        FROM user
        WHERE userId = #{userId}
        AND status != 3
    </select>

    <select id="userExisting" resultType="java.lang.Boolean">
        SELECT EXISTS(
        SELECT username
        FROM user
        WHERE userId = #{userId,jdbcType=BIGINT} AND status != 3
        )
    </select>

    <select id="userExistingWithUsernameAndEmail" resultType="java.lang.Boolean">
        SELECT EXISTS(
        SELECT username
        FROM user
        WHERE username = #{username,jdbcType=VARCHAR} OR email = #{email,jdbcType=VARCHAR} AND status != 3
        )
    </select>

    <update id="incrementViews">
        UPDATE user
        SET version = version + 1,
        views = views + 1
        WHERE userId = #{userId, jdbcType=BIGINT} AND version = #{version, jdbcType=BIGINT}
    </update>

    <update id="refreshFollowers">
        UPDATE user
        SET version = version + 1,
        followers = #{followers, jdbcType=BIGINT}
        WHERE userId = #{userId, jdbcType=BIGINT} AND version = #{version, jdbcType=BIGINT}
    </update>

    <update id="refreshFollowings">
        UPDATE user
        SET version = version + 1,
        followings = #{followings, jdbcType=BIGINT}
        WHERE userId = #{userId, jdbcType=BIGINT} AND version = #{version, jdbcType=BIGINT}
    </update>

    <select id="isEmailExisting" resultType="java.lang.Boolean">
        SELECT EXISTS(
        SELECT email
        FROM user
        WHERE email = #{email,jdbcType=VARCHAR}
        )
    </select>
</mapper>
