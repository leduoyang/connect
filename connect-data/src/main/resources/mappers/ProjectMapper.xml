<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.connect.data.dao.IProjectDao">
    <resultMap id="projectDtoResultMap" type="com.connect.data.dto.ProjectDto">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="title" column="title"/>
        <result property="description" column="description"/>
        <result property="status" column="status"/>
        <result property="tags" column="tags"/>
        <result property="boosted" column="boosted"/>
        <result property="stars" column="stars"/>
        <result property="views" column="views"/>
        <result property="version" column="version"/>
        <result property="dbModifyTime" column="db_modify_time"/>
    </resultMap>

    <resultMap id="projectResultMap" type="com.connect.data.entity.Project">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="description" column="description"/>
        <result property="status" column="status"/>
        <result property="tags" column="tags"/>
        <result property="boosted" column="boosted"/>
        <result property="stars" column="stars"/>
        <result property="views" column="views"/>
        <result property="version" column="version"/>
        <result property="createdUser" column="created_user"/>
        <result property="updatedUser" column="updated_user"/>
        <result property="dbCreateTime" column="db_create_time"/>
        <result property="dbModifyTime" column="db_modify_time"/>
    </resultMap>

    <insert id="createProject" parameterType="com.connect.data.entity.Project" useGeneratedKeys="true"
            keyProperty="id" keyColumn="id">
        INSERT INTO project(title, description, status, tags, boosted, created_user, updated_user)
        VALUES (
        #{title, jdbcType=VARCHAR},
        #{description, jdbcType=VARCHAR},
        #{status,jdbcType=TINYINT},
        #{tags,jdbcType=VARCHAR},
        #{boosted, jdbcType=TINYINT},
        #{createdUser,jdbcType=BIGINT},
        #{updatedUser,jdbcType=BIGINT}
        )
    </insert>

    <update id="updateProject" parameterType="com.connect.data.entity.Project">
        UPDATE project
        <trim prefix="set" suffixOverrides=",">
            updated_user = #{updatedUser, jdbcType=BIGINT},
            <if test="title != null and title != ''">
                title = #{title, jdbcType=VARCHAR},
            </if>
            <if test="description != null and description != ''">
                description = #{description, jdbcType=VARCHAR},
            </if>
            <if test="status != null and status >= 0">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="tags != null and tags != ''">
                tags = #{tags, jdbcType=VARCHAR},
            </if>
            <if test="boosted != null and boosted >= 0">
                boosted = #{boosted, jdbcType=TINYINT},
            </if>
        </trim>
        WHERE id = #{id, jdbcType=BIGINT}
    </update>

    <update id="incrementViews">
        UPDATE project
        SET version = version + 1,
        views = views + 1
        WHERE id = #{id, jdbcType=BIGINT} AND version = #{version, jdbcType=BIGINT}
    </update>

    <update id="refreshStars">
        UPDATE project
        SET version = version + 1,
        stars = #{stars, jdbcType=BIGINT}
        WHERE id = #{id, jdbcType=BIGINT} AND version = #{version, jdbcType=BIGINT}
    </update>

    <delete id="deleteProject">
        UPDATE project
        SET `status` = 3,
        updated_user = #{updatedUser, jdbcType=BIGINT}
        WHERE id = #{id, jdbcType=BIGINT}
    </delete>

    <select id="queryProjectById" resultMap="projectDtoResultMap">
        SELECT p.id, u.username, p.title, p.description, p.status, p.tags, p.boosted, p.stars, p.views, p.version, p.db_modify_time

        FROM project AS p
        JOIN user AS u on p.updated_user = u.userId
        WHERE p.id = #{id}
        AND (
        p.status = 0
        OR (p.status = 1
        AND p.updated_user IN (SELECT followingId FROM follow WHERE followerId = #{userId} AND status = 2 ) )
        OR (p.status != 3 AND p.updated_user = #{userId} )
        )
    </select>

    <select id="internalQueryProjectById" resultMap="projectResultMap">
        SELECT id, title, description, status, tags, boosted, stars, views, version, created_user,
        updated_user, db_create_time, db_modify_time

        FROM project
        WHERE id = #{id}
    </select>

    <select id="queryProject" resultMap="projectDtoResultMap">
        SELECT p.id, u.username, p.title, p.description, p.status, p.tags, p.boosted, p.stars, p.views, p.version, p.db_modify_time

        FROM project AS p
        JOIN user AS u on p.updated_user = u.userId
        WHERE 1=1
        <if test="keyword != null and keyword != ''">
            AND title LIKE CONCAT('%', #{keyword}, '%') OR description LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="tags != null and tags != ''">
            AND find_in_set(#{tags}, tags) &gt; 0
        </if>
        AND (
        p.status = 0
        OR (p.status = 1
        AND p.updated_user IN (SELECT followingId FROM follow WHERE followerId = #{userId} AND status = 2 ) )
        OR (p.status != 3 AND updated_user = #{userId} )
        )
        ORDER BY p.db_modify_time DESC
    </select>

    <select id="projectExisting" resultType="java.lang.Boolean">
        SELECT EXISTS(
        SELECT id
        FROM project
        WHERE id = #{id, jdbcType=BIGINT} AND created_user = #{userId, jdbcType=BIGINT} AND status != 3
        )
    </select>
</mapper>
