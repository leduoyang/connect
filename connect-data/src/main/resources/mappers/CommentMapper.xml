<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.connect.data.dao.ICommentDao">
    <resultMap id="commentResultMap" type="com.connect.data.entity.Comment">
        <id property="id" column="id"/>
        <result property="postId" column="postId"/>
        <result property="content" column="content"/>
        <result property="tags" column="tag"/>
        <result property="createdUser" column="created_user"/>
        <result property="updatedUser" column="updated_user"/>
        <result property="dbCreateTime" column="db_create_time"/>
        <result property="dbModifyTime" column="db_modify_time"/>
    </resultMap>

    <insert id="createComment" parameterType="com.connect.data.entity.Comment" useGeneratedKeys="true"
            keyProperty="id" keyColumn="id">
        INSERT INTO comment(postId, content, tags, status, created_user, updated_user)
        VALUES (
        #{postId,jdbcType=BIGINT},
        #{content, jdbcType=VARCHAR},
        #{tags, jdbcType=VARCHAR},
        #{status,jdbcType=TINYINT},
        #{createdUser,jdbcType=VARCHAR},
        #{updatedUser,jdbcType=VARCHAR}
        )
    </insert>

    <update id="updateComment" parameterType="com.connect.data.entity.Comment">
        UPDATE comment
        <trim prefix="set" suffixOverrides=",">
            updated_user = #{updatedUser, jdbcType=VARCHAR},
            <if test="content != null and content != ''">
                content = #{content, jdbcType=VARCHAR},
            </if>
            <if test="tags != null and tags != ''">
                tags = #{tags,jdbcType=VARCHAR}
            </if>
            <if test="status != null and status >= 0">
                status = #{status,jdbcType=TINYINT}
            </if>
        </trim>
        WHERE id = #{id, jdbcType=BIGINT}
    </update>

    <update id="incrementViewCount">
        UPDATE comment
        SET version = version + 1,
        viewsCount = viewsCount + 1
        WHERE id = #{id, jdbcType=BIGINT} AND version = #{version, jdbcType=BIGINT}
    </update>

    <delete id="deleteComment">
        UPDATE comment
        SET `status` = 3,
        updated_user = #{updatedUser, jdbcType=VARCHAR}
        WHERE id = #{id, jdbcType=BIGINT}
    </delete>

    <select id="queryCommentById" resultMap="commentResultMap">
        SELECT id, postId, content, tags, created_user, updated_user, db_create_time, db_modify_time
        FROM comment WHERE id = #{id} AND status != 3
    </select>

    <select id="queryComment" resultMap="commentResultMap">
        SELECT id, postId, content, tags, created_user, updated_user, db_create_time, db_modify_time

        FROM comment
        WHERE 1=1
        <if test="postId != null">
            AND postId = #{postId}
        </if>
        <if test="userId != null and userId != ''">
            AND created_user = #{userId}
        </if>
        <if test="keyword != null and keyword != ''">
            AND content LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="tags != null and tags != ''">
            AND find_in_set(#{tags}, tags) &gt; 0
        </if>
        AND status != 3
        ORDER BY db_modify_time DESC, db_create_time DESC
    </select>

    <select id="commentExisting" resultType="java.lang.Boolean">
        SELECT EXISTS(
        SELECT id
        FROM comment
        WHERE id = #{id,jdbcType=BIGINT} AND created_user = #{userId, jdbcType=VARCHAR} AND status != 3
        )
    </select>
</mapper>
